{:objects {:author {:description "Author Object."
                    :fields {:id {:description "Unique Identifier for an Author."
                                  :type (non-null Int)}
                             :name {:description "Name of an Author."
                                    :type String}
                             :email {:description "Email of an Author."
                                     :type (non-null String)}}}
           
           :blog {:description "Blog posted by an Author."
                  :fields {:id {:description "Unique Identifier for a Blog."
                                :type (non-null Int)}
                           :body {:description "Body of the blog."
                                  :type (non-null String)}
                           :author {:description "Author of the Blog."
                                    :type (non-null :author)
                                    :resolve :getAuthor}
                           :comment {:description "Comments posted on the blog."
                                     :type (list :comment)
                                     :resolve :getComments}}}

           :comment {:description "Comment posted on Blog."
                     :fields {:id {:description "Unique Identifier for a Comment."
                                   :type (non-null Int)}
                              :body {:description "Body of the comment."
                                     :type (non-null String)}
                              :author {:description "Author of the Blog."
                                       :type (non-null :author)
                                       :resolve :getAuthor}}}}

 :queries {:getAuthor {:description "Returns an Author Given an Author ID."
                       :type :author
                       :args {:id {:type (non-null Int)}}
                       :resolve :getAuthor}

           :getAllAuthors {:description "Returns all the Authors."
                           :type (list :author)
                           :resolve :getAllAuthors}
           
           :getBlog {:description "Returns a Blog given a Blog ID."
                     :type :blog
                     :args {:id {:type (non-null Int)}}
                     :resolve :getBlog}

           :getBlogs {:description "Returns all the Blogs."
                      :type (list :blog)
                      :resolve :getBlogs}

           :getComments {:description "Returns comments for a given Blog ID."
                         :type (list :comment)
                         :args {:blog_id {:type (non-null Int)}}
                         :resolve :getComments}}

 :mutations {:createAuthor {:description "Creates an Author given an email and name(optional)."
                            :type :author
                            :args {:email {:type (non-null String)}
                                   :name {:type String}}
                            :resolve :createAuthor}}}
