{:objects {:author {:description "Author object."
                    :fields {:id {:description "Unique identifier for an Author."
                                  :type (non-null String)}
                             :name {:description "Name of an Author."
                                    :type String}
                             :email {:description "Email of an Author."
                                     :type (non-null String)}}}
           
           :comment {:description "Comment posted on the Blog."
                     :fields {:id {:description "Unique identifier for the Comment."
                                   :type (non-null String)}
                              :body {:description "Body of the comment."
                                     :type (non-null String)}
                              :author {:description "Author of the Blog."
                                       :type (non-null :author)
                                       :resolve :getAuthor}}}

           :blog {:description "Blog posted by an Author."
                  :fields {:id {:description "Unique identifier for a Blog."
                                :type (non-null String)}
                           :body {:description "Body of the Blog."
                                  :type (non-null String)}
                           :author {:description "Author of the Blog."
                                    :type (non-null :author)
                                    :resolve :getAuthor}
                           :comments {:description "List of comments on the Blog."
                                      :type (list :comment)
                                      :args {:first {:type Int
                                                     :default-value 10}
                                             :skip {:type Int
                                                    :default-value 0}}
                                      :resolve :getComments}}}}

 :queries {:getAuthor {:description "Returns an Author given an Author ID."
                       :type :author
                       :args {:id {:type (non-null String)}}
                       :resolve :getAuthor}

           :getAllAuthors {:description "Returns all the Authors."
                           :type (list :author)
                           :resolve :getAllAuthors}
           
           :getBlog {:description "Returns a Blog given a Blog ID."
                     :type :blog
                     :args {:id {:type (non-null String)}}
                     :resolve :getBlog}

           :getBlogs {:description "Returns all the Blogs."
                      :type (list :blog)
                      :args {:first {:type Int
                                     :default-value 10}
                             :skip {:type Int
                                    :default-value 0}}
                      :resolve :getBlogs}

           :getComments {:description "Returns comments for a given Blog ID."
                         :type (list :comment)
                         :args {:first {:type Int
                                        :default-value 10}
                                :skip {:type Int
                                       :default-value 0}
                                :blogID {:type (non-null String)}}
                         :resolve :getComments}}

 :mutations {:createAuthor {:description "Creates an Author given an email and name(optional)."
                            :type :author
                            :args {:email {:type (non-null String)}
                                   :name {:type String}}
                            :resolve :createAuthor}

             :postComment {:description "Post a comment on the Blog."
                           :type :comment
                           :args {:blogID {:type (non-null String)}
                                  :authorID {:type (non-null String)}
                                  :body {:type (non-null String)}}
                           :resolve :postComment}

             :postBlog {:description "Post the Blog."
                        :type :blog
                        :args {:authorID {:type (non-null String)}
                               :body {:type (non-null String)}}
                        :resolve :postBlog}}}
